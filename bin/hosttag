#!/usr/bin/python
#
# Simple hosttag client
# 
# Usage:
#   ht <tag>
#
#   ht -a <tag1> <tag2>         Show hosts with tag1 AND tag2
#   ht -o <tag1> <tag2>         Show hosts with tag1 OR tags2
#
#   ht -h <host>                Show tags on 'host'
#

import getopt, sys
import urllib2

def usage():
    print 'usage: ' + sys.argv[0] + " [-a|-o|-l] <tag1> [<tag2>]";
    print '       ' + sys.argv[0] + " -h [-a|-o|-l] <host1> [<host2>]";

try:
    opts, args = getopt.getopt(sys.argv[1:], '?Aaolh', [ 'help', 'all', 'and', 'or', 'list', 'host' ])
except getopt.GetoptError, err:
    print str(err)
    usage()
    sys.exit(2)

rel = None
all = 0
hostmode = 0
for o, a in opts:
    if o in ('-?', '--help'):
        usage()
        sys.exit(0)
    elif o in ('-A', '--all'):
        all = 1
    elif o in ('-a', '--and'):
        rel = 'and'
    elif o in ('-o', '--or'):
        rel = 'or'
    elif o in ('-l', '--list'):
        rel = 'list'
    elif o in ('-h', '--host'):
        hostmode = 1
    else:
        usage()
        assert False, 'unhandled option'

# Report all hosts with -A
if all:
    hostmode = 1
    args = [ 'ALL' ]

if len(args) < 1:
    usage()
    sys.exit(2)

if len(args) > 1 and rel == None:
    print "Multiple tags require -a or -o to be specified"
    print
    usage()
    sys.exit(2)

# Fetch data
d = ()
for arg in args:
    if hostmode:
        namespace = 'hosts'
    else:
        namespace = 'tags'
    url = 'http://hosttag:1978/%s/%s' % ( namespace, arg )
#   print url + ':'

    usock = None
    try:
        usock = urllib2.urlopen( url )
    except urllib2.HTTPError, err:
        if err.code == 404:
            print 'Not Found.'
        else:
            print err
        sys.exit(1)
    data = usock.read()
    usock.close()
    data = data.rstrip()

    # Special case single-arg request
    if len(args) == 1:
        print data
        sys.exit(0)

    if rel == 'list':
        print '%s: %s' % ( arg, data )
        continue

    if not len(d):
        d = set( data.split(' ') )
        continue

    if rel == 'and':
        d = d.intersection( set( data.split(' ') ) )
    elif rel == 'or':
        d = d.union( set( data.split(' ') ) )

if len(d):
    print ' '.join(d)


# vim:sw=4
