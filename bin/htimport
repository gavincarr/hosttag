#!/usr/bin/env ruby
#
# Import hosts and tags into datastore from a directory
#

require 'optparse'
require 'ftools'

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'hosttag'
include Hosttag

defaults = { :datadir => '/etc/hosttag' }

# ------------------------------------------------------------------------------
# Subroutines

def die(error)
  puts error
  exit 1
end

def usage(opts)
  puts opts
  exit
end

def parse_options(options)
  opts = OptionParser.new
  opts.banner = "Usage: htimport [options]"
  opts.on('-?', '-h', '--help') do
    puts opts
    exit
  end
  opts.on('-h', '--help', '-?', 'Show this usage information') do
    die(opts)
  end
  opts.on('-s=ARG', '--server=ARG', String, 'Server hostname to connect to. Default: hosttag') do |val|
    options[:server] = val
  end
  opts.on('-p=ARG', '--port=ARG', Integer, 'Server port to connect to. Default: 6379') do |val|
    options[:port] = val
  end
  opts.on('--delete', 'Delete mode - remove all hosttags from the datastore before importing') do
    options[:delete] = true
  end
  opts.on('-y', '--yes', "(--delete) Assume automatic confirmation for --delete") do
    options[:autoconfirm] = true
  end
  opts.on('--datadir=DIR', String, 'Data directory from which to load data. Default: /etc/hosttag') do |val|
    options[:datadir] = val
  end
  opts.on('--ns=STR', '--namespace=STR', String, 'Namespace into which we load hosttag data. Default: hosttag') do |val|
    options[:namespace] = val
  end
  opts.on('-v', '--verbose', 'Verbose output') do
    options[:verbose] = true
  end

  # Parse options
  begin
    args = opts.parse(ARGV) 
  rescue => e
    puts "Error: " << e
    usage(opts)
  end

  if args.length > 0
    puts "Error: unexpected arguments '#{args}'"
    usage(opts)
  end

  return options
end

# ----------------------------------------------------------------------------
# Main

options = parse_options(defaults)
hosttag_import_from_directory(options[:datadir], options)

